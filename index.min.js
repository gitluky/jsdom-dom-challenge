//"use strict";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}var playing=!0,timer=function(){return setInterval(function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1},1e3)},interval=timer(),minus=document.getElementById("minus"),plus=document.getElementById("plus"),heart=document.getElementById("heart"),pause=document.getElementById("pause"),commentForm=document.getElementsByTagName("form")[0];minus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b-1}),plus.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText);a.innerText=b+1}),heart.addEventListener("click",function(){var a=document.getElementById("counter"),b=parseInt(a.innerText),c=document.querySelector(".likes"),d=void 0;if([].concat(_toConsumableArray(c.children)).map(function(a){return parseInt(a.dataset.num)}).includes(b)){d=document.querySelector('[data-num="'+b+'"]');var e=parseInt(d.children[0].innerText);d.innerHTML=b+" has been liked <span>"+(e+1)+"</span> times"}else(d=document.createElement("li")).setAttribute("data-num",b),d.innerHTML=b+" has been liked <span>1</span> time",c.appendChild(d)}),pause.addEventListener("click",function(){playing?(playing=!1,clearInterval(interval),this.innerText="resume"):(playing=!0,interval=timer(),this.innerText="pause"),[].concat(_toConsumableArray(document.getElementsByTagName("button"))).forEach(function(a){"pause"!==a.id&&(a.disabled=!playing)})}),commentForm.addEventListener("submit",function(a){a.preventDefault();var b=this.children[0],c=b.value;b.value="";var d=document.querySelector(".comments"),e=document.createElement("p");e.innerText=c,d.appendChild(e)});

document.addEventListener("DOMContentLoaded", () => {
  counter = 0;
  startCount = setInterval(addAndDisplayCount, 1000)
  pauseResume = document.getElementById('pause');
  likeButton = document.getElementById('heart');
  commentForm = document.getElementById('comment-form');
  likeButton.addEventListener('click', like);
  pauseResume.addEventListener('click', pause);
  commentForm.addEventListener('submit', function(e){
    e.preventDefault();
    addComment();
  });
  likesObject = {};
  commentList = [];
  minusCounter();
  plusCounter();
  displayLikes();
});

function addAndDisplayCount() {
  counter++;
  document.getElementById('counter').innerHTML = counter;
}

function minusCounter() {
  const minus = document.getElementById('minus');
  minus.addEventListener('click', function() {
    counter--;
    document.getElementById('counter').innerHTML = counter;
  });
}

function plusCounter() {
  const plus = document.getElementById('plus');
  plus.addEventListener('click', function() {
    addAndDisplayCount();
  });
}

function pause() {
  clearInterval(startCount);
  document.getElementById('minus').disabled = true;
  document.getElementById('plus').disabled = true;
  document.getElementById('heart').disabled = true;
  pauseResume.textContent = 'resume';
  pauseResume.removeEventListener('click', pause);
  pauseResume.addEventListener('click', resume);
}

function resume() {
  startCount = setInterval(addAndDisplayCount, 1000);
  document.getElementById('minus').disabled = false;
  document.getElementById('plus').disabled = false;
  document.getElementById('heart').disabled = false;
  pauseResume.textContent = 'pause';
  pauseResume.removeEventListener('click', resume);
  pauseResume.addEventListener('click', pause);
}

function like() {
  if (likesObject.hasOwnProperty(counter)){
    likesObject[counter] += 1;
  } else {
    likesObject[counter] = 1;
  }
  displayLikes();
}

function displayLikes() {
  const likes = document.getElementsByClassName('likes')[0]
  likes.innerHTML = ""
  for (l in likesObject) {
    const likeLi = document.createElement('li');
    likeLi.textContent = `${l} has ${likesObject[l]} likes`;
    likes.appendChild(likeLi);
  }
}

function addComment() {
  const commentInput = document.getElementById('comment-input').value
  commentList = [...commentList, commentInput]
  displayComments();
}

function displayComments() {
  document.getElementById('list').innerHTML = ""
  for (c in commentList) {
    const commentLi = document.createElement('li');
    commentLi.textContent = commentList[c];
    document.getElementById('list').appendChild(commentLi);
  }
}
